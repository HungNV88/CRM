@using TamoCRM.Core
@using TamoCRM.Domain.Groups
@using TamoCRM.Domain.SourceTypes
@using TamoCRM.Web.Framework.Users
@using TamoCRM.Domain.UserRole
@model TamoCRM.Web.Mvc.Areas.Admin.Models.Reports.BC300Model
@{
    ViewBag.Title = "Báo cáo tỷ lệ các level theo chiến dịch";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    var user = UserContext.GetCurrentUser();
    var branchId = UserContext.GetDefaultBranch();
    //if (user.GroupConsultantType != (int)GroupConsultantType.ManagerConsultant)
    //{
    //    groups = groups.Where(c => c.LeaderId == UserContext.GetCurrentUser().UserID || c.GroupId == (int)ViewBag.GroupId).ToList();
    //}

    // Group
    var groups = ViewBag.Groups;
    ((List<GroupInfo>)groups).RemoveAll(c => c.GroupId == 0);
    ((List<GroupInfo>)groups).Insert(0, new GroupInfo { GroupId = 0, Name = "Tất cả", EmployeeTypeId = (int)EmployeeType.Consultant });
    var lstGroups = new SelectList(((List<GroupInfo>)groups).Where(c => c.EmployeeTypeId == (int)EmployeeType.Consultant), "GroupId", "Name");

    // User
    var users = ViewBag.Users;
    // User
    ((List<UserInfo>)users).RemoveAll(c => c.GroupId == 0);
    ((List<UserInfo>)users).Insert(0, new UserInfo { UserID = 0, FullName = "Tất cả" });
    var lstUsers = new SelectList(users, "UserID", "FullName");

    // SourceType
    var sourceTypes = ViewBag.SourceTypes;
    ((List<SourceTypeInfo>)sourceTypes).RemoveAll(c => c.SourceTypeId == 0);
    ((List<SourceTypeInfo>)sourceTypes).Insert(0, new SourceTypeInfo { SourceTypeId = 0, Name = "Tất cả" });
    var lstSourceTypes = new SelectList(sourceTypes, "SourceTypeId", "Name");

    var lstStatusType = Util.SelectedListInclude<StatusContact>(true, (int)StatusContact.New, (int)StatusContact.ReTrieve);

}
<div class="breadcrumbs" id="breadcrumbs">
    <script type="text/javascript">
        try {
            ace.settings.check('breadcrumbs', 'fixed');
        } catch (e) { }
    </script>

    <ul class="breadcrumb">
        <li>
            <i class="icon-home home-icon"></i>
            <a href="#">Trang chủ</a>
        </li>

        <li>
            <a href="javascript:void(0);">Danh mục</a>
        </li>
        <li class="active">Báo cáo tỷ lệ level theo chiến dịch</li>
    </ul>
</div>

<div class="page-content">
    <div class="page-header">
        <h1>Báo cáo tỷ lệ các level contact theo chiến dịch
        </h1>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-sm-12" id="alert">
            </div>
        </div>
        <div class="col-xs-12">
            @using (Ajax.BeginForm("BC301", "Report", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "uploadexcelform" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <label class="col-sm-2 control-label no-padding-right" style="text-align: left !important;" for="form-field-2">Nhóm </label>

                    <div class="col-sm-2">
                        @Html.DropDownList("GroupId", lstGroups, new { @class = "form-control" })
                    </div>

                    @*<div>
                     <div class="col-sm-1" style="width: 15%;">
                         <input type="checkbox" id='chkGroups' checked />
                         <label>Tất cả</label>
                     </div>
                    <div>
                        @foreach (var item in groups)
                        {
                                <div class="col-sm-1" style="width: 15%;">
                                    <input type="checkbox" name='chkGroups' id='@(item.GroupId)_chkGroups' />
                                    <label for="@(item.GroupId)_chkGroups">@item.Name</label>
                                </div>
                        }
                    </div>
                </div>*@
                </div>
                <div class="space-6"></div>
                <div class="row">
                    <label class="col-sm-2 control-label no-padding-right" style="text-align: left !important;" for="form-field-2">Tư vấn tuyển sinh</label>
                    <div class="col-sm-3">
                        @Html.DropDownList("UserId", lstUsers, new { @class = "form-control" })
                    </div>
                </div>
                <div class="space-6"></div>
                @*<div class="row">

                <label class="col-sm-1 control-label no-padding-right" style="text-align: left !important;" for="form-field-2">Nguồn </label>
                <div class="col-sm-3">
                    @Html.DropDownList("StatusType", lstStatusType, new { @class = "form-control" })
                </div>
                <label class="col-sm-1 control-label no-padding-right" style="text-align: left !important;visibility: hidden" for="form-field-2">Ngày bàn giao</label>
                <div class="col-sm-2" style="visibility: hidden">
                    @Html.DropDownList("ddlDayReportType", (SelectList)ViewBag.DayReportTypes, new { @class = "form-control" })
                </div>
            </div>*@
                <div class="space-6"></div>
                <div class="row">
                    <label class="col-sm-2 control-label no-padding-right" style="text-align: left !important;" for="form-field-2">Ngày bàn giao</label>
                    <div id="divDay">
                        <div id="divDayFrom">
                            <label class="col-sm-1 control-label no-padding-right" style="text-align: left !important;" for="form-field-2" id="lblHandoverFromDate">Từ ngày</label>
                            <div class="col-sm-2">
                                @Html.TextBox("HandoverFromDate", string.Empty, new { @class = "form-control" })

                            </div>
                        </div>
                        <div id="divDayTo">
                            <label class="col-sm-1 control-label no-padding-right" style="text-align: left !important;" for="form-field-3">Đến ngày </label>
                            <div class="col-sm-2">
                                @Html.TextBox("HandoverToDate", string.Empty, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="space-6"></div>
                <div class="row">
                    <label class="col-sm-2 control-label no-padding-right" style="text-align: left !important;" for="form-field-2">Ngày gọi gần nhất</label>
                    <div id="divCallDay">
                        <div id="divCallDayFrom">
                            <label class="col-sm-1 control-label no-padding-right" style="text-align: left !important;" for="form-field-2" id="lblCallFromDate">Từ ngày</label>
                            <div class="col-sm-2">
                                @Html.TextBox("CallFromDate", string.Empty, new { @class = "form-control" })

                            </div>
                        </div>
                        <div id="divCallDayTo">
                            <label class="col-sm-1 control-label no-padding-right" style="text-align: left !important;" for="form-field-3">Đến ngày </label>
                            <div class="col-sm-2">
                                @Html.TextBox("CallToDate", string.Empty, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="space-6"></div>
                @*<div class="row" >
                <label class="col-sm-2 control-label no-padding-right" style="text-align: left !important;" for="form-field-3">Ngày xuất báo cáo</label>
                <div class="col-sm-2">
                    @Html.TextBox("ToDate", DateTime.Now.ToString("dd/MM/yyyy"), new { @class = "form-control" })
                </div>
            </div>*@
                <div class="space-6"></div>
                <div class="row">
                    <div class="col-sm-5">
                        <button type="button" class="btn-import btn-primary" id="btnReport">Xuất báo cáo</button>
                        <button type="button" class="btn-import btn-primary" id="btnSave">Tải về</button>
                    </div>
                    <div class="col-sm-7">
                    </div>
                </div>
            }

            <div class="space-6"></div>
            <div id="mydiv">
                <iframe id="frame" style="width: 100%; height: 400px; border: none;"></iframe>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        bindGlobalGroups();
        initPage();

        $("#btnReport").click(function (e) {
            e.preventDefault();
            var userId = $("#UserId").val();
            if (userId == null || userId == '') {
                alert("Không có TVTS");
                return;
            }
            //var groupId = $("#GroupId").val(); //Su dung khi chi duoc chon 1 nhom.
            //var groupId = $('#chkGroups').is(':checked') ? 0 : buildParamGroups();
            var groupId = $('#GroupId').val();
            var branchId = '@ViewBag.BranchId';
            var handoverToDate = $("#HandoverToDate").val();
            var handoverFromDate = $("#HandoverFromDate").val();
            var callFromDate = $("#CallFromDate").val();
            var callToDate = $("#CallToDate").val();
            checkDate(handoverFromDate, handoverToDate, callFromDate, callToDate);
            var url = '/admin/report/showbc301?groupId={0}&userId={1}&hFromDate={2}&hToDate={3}&callFromDate={4}&callToDate={5}&reportType={6}';
            var url = url.format(groupId, userId, handoverFromDate, handoverToDate, callFromDate, callToDate, '@((int)ReportType.Pdf)');
            $("#frame").attr("src", url);
        });

        $("#btnSave").click(function (e) {
            e.preventDefault();
            var userId = $("#UserId").val();
            if (userId == null || userId == '') {
                alert("Không có TVTS");
                return;
            }
            //var groupId = $("#GroupId").val(); //Su dung khi chi duoc chon 1 nhom.
            //var groupId = $('#chkGroups').is(':checked') ? 0 : buildParamGroups();
            var groupId = $('#GroupId').val();
            var branchId = '@ViewBag.BranchId';
            var handoverToDate = $("#HandoverToDate").val();
            var handoverFromDate = $("#HandoverFromDate").val();
            var callFromDate = $("#CallFromDate").val();
            var callToDate = $("#CallToDate").val();
            checkDate(handoverFromDate, handoverToDate, callFromDate, callToDate);
            var url = '/admin/report/showbc301?groupId={0}&userId={1}&hFromDate={2}&hToDate={3}&callFromDate={4}&callToDate={5}&reportType={6}';
            var url = url.format(groupId, userId, handoverFromDate, handoverToDate, callFromDate, callToDate, '@((int)ReportType.Excel)');
            $("#frame").attr("src", url);
        });
    });

    function checkDate(hFromDate, hToDate, callFromDate, callToDate) {
        if (hFromDate == '' && hToDate == '' && callFromDate == '' && callToDate == '') {
            alert("Bạn vui lòng chọn ngày bàn giao hoặc ngày gọi để xuất báo cáo");
            return;
        }
        if ((hFromDate == '' && hToDate != '') || (hFromDate != '' && hToDate == '')) {
            alert("Bạn vui lòng chọn ngày bắt đầu và kết thúc bàn giao");
            return;
        }
        if ((callFromDate == '' && callToDate != '') || (callFromDate != '' && callToDate == '')) {
            alert("Bạn vui lòng chọn ngày bắt đầu và kết thúc gọi");
            return;
        }

    }

    function loadLatch() {
        var lumpedId = $('#ddlLumpedId').val();
        var url = "/admin/api/latch/getbylumpedid?lumpedId=" + lumpedId;
        $.ajax({
            url: url,
            type: 'GET',
            success: function (data) {
                if (data == null) return;
                var options = '';
                for (var i = 0; i < data.length; i++) {
                    options += '<option value="' + data[i].Id + '">' + data[i].Name + '</option>';
                }
                $('#ddlLatchId').empty().append(options);
            }
        });
    }

    $('#chkGroups').change(function () {
        if ($('#chkGroups').is(':checked')) {
            var elements = document.getElementsByName('chkGroups');
            for (var i = 0; i < elements.length; i++) {
                $(elements[i]).attr('checked', false);
            }
            $("#UserId").prop("disabled", false);
            loadUserByGroupId_BC300();
        }
    });

    $('input[name="chkGroups"]').change(function () {
        $('#chkGroups').attr('checked', false);
        var groupIds = $('#chkGroups').is(':checked') ? '' : buildParamGroups();
        loadUserByGroupId_BC300();
    });

    function initPage() {
        var dateNow = new Date();
        var date = dateNow.getDate();
        if (date < 10) {
            date = "0" + date;
        }
        var month = dateNow.getMonth() + 1;
        if (month < 10) {
            month = "0" + month;
        }
        var year = dateNow.getFullYear();
        var currentDate = date + "/" + month + "/" + year;
        $("#HandoverToDate").datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $("#HandoverToDate").val(currentDate);
        $("#HandoverFromDate").datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $("#HandoverFromDate").val(currentDate);
        $("#CallFromDate").datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $("#CallToDate").datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });

        //var groupIds = $('#chkGroups').is(':checked') ? '' : buildParamGroups();

        // Group
        $("#GroupId").change(function () {
            loadUserByGroupId();
        });

        // Change Lumped
        //loadLatch();
        //$("#ddlLumpedId").change(function () {
        //    loadLatch();
        //});

        @*$("#ddlDayReportType").change(function () {
        var id = $(this).val();
        if (id == '@((int)DayReportType.Lumped)') {
                $('#divDay').css('display', 'none');
                $('#divLatch').css('display', 'none');
                $('#divLumped').css('display', 'block');
            } else if (id == '@((int)DayReportType.Latch)') {
                $('#divDay').css('display', 'none');
                $('#divLatch').css('display', 'block');
                $('#divLumped').css('display', 'block');
                loadLatch();
            } else {
                $('#divDay').css('display', 'block');
                $('#divLatch').css('display', 'none');
                $('#divLumped').css('display', 'none');
                if (id == '@((int)DayReportType.Day)') {
                    $('#divDayTo').css('display', 'block');
                    $('#lblHandoverFromDate').html('Từ ngày');
                } else {
                    $('#divDayTo').css('display', 'none');
                    $('#lblHandoverFromDate').html('Chọn ngày');
                }
            }
        });

        loadUserByGroupId();*@
    }

</script>
