@using TamoCRM.Core
@using TamoCRM.Domain.Catalogs
@using TamoCRM.Domain.Groups
@using TamoCRM.Domain.StatusMap
@using TamoCRM.Domain.UserRole
@using TamoCRM.Domain.Levels
@using TamoCRM.Web.Framework
@using TamoCRM.Web.Framework.Users
@model TamoCRM.Web.Mvc.Areas.Admin.Models.Reports.BC50Model

@{
    ViewBag.Title = "Báo cáo xuất CC3";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    //Product List
    var product = ViewBag.Products;
    ((List<ProductInfo>)product).RemoveAll(c => c.Id == 0);
    ((List<ProductInfo>)product).Insert(0, new ProductInfo { Id = 0, Name = "Tất cả" });
    var lstProducts = new SelectList(product, "Id", "Name");

    var Qualities = ViewBag.Quality;
    var lstQualities = new SelectList(Qualities, "Id", "Name");

    var user = UserContext.GetCurrentUser();
    var groups = (List<GroupInfo>)ViewBag.Groups;
    var branchId = UserContext.GetDefaultBranch();
    const int employeeId = (int)EmployeeType.Consultant;
    if (user.GroupConsultantType != (int)GroupConsultantType.ManagerConsultant)
    {
        groups = groups.Where(c => c.LeaderId == UserContext.GetCurrentUser().UserID || c.GroupId == (int)ViewBag.GroupId).ToList();
    }
    ((List<GroupInfo>)groups).RemoveAll(c => c.GroupId == 0);
    if (groups.Count > 1)
    {
        ((List<GroupInfo>)groups).Insert(0, new GroupInfo { GroupId = 0, Name = "Tất cả", BranchId = branchId, EmployeeTypeId = employeeId });
    }

    var lstGroups = new SelectList(groups.Where(c => c.BranchId == branchId).Where(c => c.EmployeeTypeId == employeeId), "GroupId", "Name");
    
    var lstLevels = ViewBag.Levels;
    ((List<LevelInfo>)lstLevels).RemoveAll(c => c.LevelId == 0);
    ((List<LevelInfo>)lstLevels).Insert(0, new LevelInfo { LevelId = 0, Name = "Tất Cả" });
    //var lstQualities = new SelectList(Qualities, "Id", "Name");
    
    var lstUsers = StoreData.SelectedList<UserInfo>();

    var StatusMaps = ViewBag.StatusMaps;
    ((List<StatusMapInfo>)StatusMaps).RemoveAll(c => c.Id == 0);
    ((List<StatusMapInfo>)StatusMaps).Insert(0, new StatusMapInfo { Id = 0, Name = "Tất Cả" });
    var lstStatusMaps = new SelectList(StatusMaps, "Id", "Name");

    var StatusCares = ViewBag.StatusCares;
    ((List<StatusCareInfo>)StatusCares).RemoveAll(c => c.Id == 0);
    ((List<StatusCareInfo>)StatusCares).Insert(0, new StatusCareInfo { Id = 0, Name = "Tất Cả" });
    var lstStatusCares = new SelectList(StatusCares, "Id", "Name");

}


<div class="breadcrumbs" id="breadcrumbs">
    <script type="text/javascript">
        try {
            ace.settings.check('breadcrumbs', 'fixed');
        }
        catch (e) {

        }
    </script>

    <ul class="breadcrumb">
        <li>
            <i class="icon-home home-icon"></i>
            <a href="#">Trang chủ</a>
        </li>

        <li>
            <a href="javascript:void(0);">Danh mục</a>
        </li>
        <li class="active">Contact</li>
    </ul>
</div>

<div class="page-content">
    <div class="page-header">
        <h1>@ViewBag.Title</h1>
    </div>
    <!-- /.page-header -->

    <div class="row">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            @using (Ajax.BeginForm("ShowBC50", "Report", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "filter_contact_search_advance" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-sm-12" id="alert">
                    </div>
                </div>
                <div style="border-bottom: 1px solid #c5d0dc; padding: 0 0 15px 0;">

                    <div id="divLevels" class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Level</label>
                        </div>
                        @foreach (var item in StoreData.ListLevel)
                        {
                            <div class="col-sm-1">
                                <input type="checkbox" name="chkLevels" id='@(item.LevelId)_chkLevel' />
                                <label for="@(item.LevelId)_chkLevel">@item.Name</label>
                            </div>
                        }
                    </div>

                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Trạng thái chăm sóc</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DropDownList("ddlStatusCare", lstStatusCares, new { @style = "width: 100%;" })
                        </div>
                        
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Ngày bàn giao</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("HandoverFromDate", string.Empty, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-1">
                            <label class="bolder">Đến ngày</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("HandoverToDate", string.Empty, new { @style = "width: 90%;" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Ngày gọi gần nhất</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("CallFromDate", string.Empty, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-1">
                            <label class="bolder">Đến ngày</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("CallToDate", string.Empty, new { @style = "width: 90%;" })
                        </div>
                    </div>

                    <div class="space-6"></div>
                    <div class="space-4"></div>
                    <div class="form-group">
                        <div class="col-sm-5">
                            <button type="button" class="btn-import btn-primary" id="btnReport" style="margin-right: 5px;">Xuất báo cáo</button>
                            <button type="button" class="btn-import btn-primary" id="btnSave">Tải về</button>
                        </div>
                        <div class="col-sm-7">

                        </div>
                    </div>
               </div>
            }

            <div id="mydiv">
                <iframe id="frame" style="width: 100%; height: 400px; border: none;"></iframe>
            </div>

            <!-- PAGE CONTENT ENDS -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>

<script type="text/javascript">
    var branchId = '@UserContext.GetDefaultBranch()';
    var employeeTypeId = '@((int)EmployeeType.Consultant)';

    $(document).ready(function () {

        //loadLevels(); 

        $('#CallToDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $('#CallFromDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $('#HandoverToDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $('#HandoverFromDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });

        $("#btnReport").click(function (e) {
          
            var statusCareId = $('#ddlStatusCare').val();
            var productSellId = $('#ddlProductSellId').val();
            var callToDate = $('#CallToDate').val().replaceAll('/', '');
            var callFromDate = $('#CallFromDate').val().replaceAll('/', '');
            var handoverToDate = $('#HandoverToDate').val().replaceAll('/', '');
            var handoverFromDate = $('#HandoverFromDate').val().replaceAll('/', '');
            var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();

            var url = "/admin/report/ShowBC50?statusCareId=" + statusCareId + "&levelIds=" + levelIds + "&handoverFromDate=" + handoverFromDate + "&handoverToDate=" + handoverToDate + "&callFromDate=" + callFromDate + "&callToDate=" + callToDate + "&employeeTypeId=" + employeeTypeId + "&reporttype=" + '@((int)ReportType.Pdf)';
            $("#frame").attr("src", url);
        });

        $("#btnSave").click(function (e) {
            e.preventDefault();
          
            var statusCareId = $('#ddlStatusCare').val();
            
            var callToDate = $('#CallToDate').val().replaceAll('/', '');
            var callFromDate = $('#CallFromDate').val().replaceAll('/', '');
            var handoverToDate = $('#HandoverToDate').val().replaceAll('/', '');
            var handoverFromDate = $('#HandoverFromDate').val().replaceAll('/', '');
            var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();        

            var url = "/admin/report/ShowBC50?statusCareId=" + statusCareId + "&levelIds=" + levelIds + "&handoverFromDate=" + handoverFromDate + "&handoverToDate=" + handoverToDate + "&callFromDate=" + callFromDate + "&callToDate=" + callToDate + "&employeeTypeId=" + employeeTypeId + "&reporttype=" + '@((int)ReportType.Excel)';
            $("#frame").attr("src", url);
        });
    });
    
    function loadLevels() {
        $('#divLevels').html('');
        
        $.ajax({
            type: 'GET',
            url: '/admin/api/level/GetLevelWithContactCount',
            data: {
                userIds: userIds,
                employeeTypeId: employeeTypeId,
            },
            success: function (data) {
                if (data != null && data.length > 0) {
                    var total = 0;
                    for (var i = 0; i < data.length; i++) {
                        total += parseInt(data[i].ContactCount);
                    }
                    var html = '';
                    html += '<div class="col-sm-2">' +
                        '<label class="bolder">Level</label>' +
                        '</div>' +
                        '<div class="col-sm-1" style="width: 11.3%;">' +
                        '<input type="checkbox" id="chkLevels" checked />' +
                        '<label>Tất cả (' + total + ')</label>' +
                        '</div>';
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        if (item.LevelId <= 10) {
                            html += '<div class="col-sm-1" style="width: 9%;">' +
                                '<input type="checkbox" name="chkLevels" id="' + item.LevelId + '_chkLevel" />' +
                                '<label for="' + item.LevelId + '_chkLevel">' + item.Name + ' (' + item.ContactCount + ')</label>' +
                                '</div>';
                        }
                    }
                    $('#divLevels').html(html);
                    //reloadGrid();

                    $('#chkLevels').change(function () {
                        if ($('#chkLevels').is(':checked')) {
                            var elements = document.getElementsByName('chkLevels');
                            for (var i = 0; i < elements.length; i++) {
                                $(elements[i]).attr('checked', false);
                            }
                            var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();
                            loadStatusMapByLevel(levelIds, employeeTypeId);
                        }
                    });
                    $('input[name="chkLevels"]').change(function () {
                        $('#chkLevels').attr('checked', false);
                        var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();
                        loadStatusMapByLevel(levelIds, employeeTypeId);
                    });

                    var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();
                    loadStatusMapByLevel(levelIds, employeeTypeId);
                }
            },
            error: function (request, status, ex) {
                alertError("Hệ thống bị lỗi, không thể tải danh sách level.");
            }
        });
    }
</script>




