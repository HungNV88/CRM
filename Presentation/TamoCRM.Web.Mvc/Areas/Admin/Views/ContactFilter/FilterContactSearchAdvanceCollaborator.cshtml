@using TamoCRM.Core
@using TamoCRM.Domain.Catalogs
@using TamoCRM.Domain.Levels
@using TamoCRM.Domain.StatusMap
@using TamoCRM.Web.Framework

@model TamoCRM.Web.Mvc.Areas.Admin.Models.Contacts.ContactCreateModel

@{
    ViewBag.Title = "Danh sách contact Lọc";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    
    //Product List
    var product = ViewBag.Products;
    ((List<ProductInfo>)product).RemoveAll(c => c.Id == 0);
    ((List<ProductInfo>)product).Insert(0, new ProductInfo { Id = 0, Name = "Tất cả" });
    var lstProducts = new SelectList(product, "Id", "Name");    
    
    var Qualities = ViewBag.Quality;
    var lstQualities = new SelectList(Qualities, "Id", "Name");
    
    var StatusMaps = ViewBag.StatusMaps;
    ((List<StatusMapInfo>)StatusMaps).RemoveAll(c => c.Id == 0);
    ((List<StatusMapInfo>)StatusMaps).Insert(0, new StatusMapInfo { Id = 0, Name = "Tất cả" });
    var lstStatusMaps = new SelectList(StatusMaps, "Id", "Name");

    var StatusCares = ViewBag.StatusCares;
    ((List<StatusCareInfo>)StatusCares).RemoveAll(c => c.Id == 0);
    ((List<StatusCareInfo>)StatusCares).Insert(0, new StatusCareInfo { Id = 0, Name = "Tất cả" });
    var lstStatusCares = new SelectList(StatusCares, "Id", "Name");
    
    var lstLevels = (List<LevelInfo>)ViewBag.LevelWithContactCount;
}

<div class="breadcrumbs" id="breadcrumbs">
    <script type="text/javascript">
        try {
            ace.settings.check('breadcrumbs', 'fixed');
        }
        catch (e) {

        }
    </script>

    <ul class="breadcrumb">
        <li>
            <i class="icon-home home-icon"></i>
            <a href="#">Trang chủ</a>
        </li>

        <li>
            <a href="javascript:void(0);">Danh mục</a>
        </li>
        <li class="active">Contact</li>
    </ul>
</div>

<div class="page-content">
    <div class="page-header">
        <h1>@ViewBag.Title</h1>
    </div>
    <!-- /.page-header -->

    <div class="row">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            @using (Ajax.BeginForm("FilterContactSearchAdvanceCollaborator", "Contact", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "filter_contact_search_advance" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-sm-12" id="alert">
                    </div>
                </div>
                <div style="border-bottom: 1px solid #c5d0dc; padding: 0 0 15px 0;">
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Level</label>
                        </div>
                        <div class="col-sm-1" style="width: 11%;">
                            <input type="checkbox" id='chkLevels' checked />
                            <label>Tất cả (@lstLevels.Sum(c => c.ContactCount))</label>
                        </div>
                        @foreach (var item in lstLevels)
                        {
                            if (item.LevelId <= 10)
                            {
                            <div class="col-sm-1" style="width: 8.6%;">
                                <input type="checkbox" name='chkLevels' id='@(item.LevelId)_chkLevel' />
                                <label for="@(item.LevelId)_chkLevel">@item.Name (@item.ContactCount)</label>
                            </div>
                            }
                        }
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Chất lượng cuộc gọi</label>
                        </div>
                        <div class="col-sm-3">
                            @Html.DropDownList("ddlQuality", lstQualities, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-2">
                            <label class="bolder">Định bán</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DropDownList("ddlProductSellId", lstProducts, new { @style = "width: 100%;" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Trạng thái chăm sóc</label>
                        </div>
                        <div class="col-sm-3">
                            @Html.DropDownList("ddlStatusCare", lstStatusCares, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-2">
                            <label class="bolder">Ngày bàn giao</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("HandoverFromDate", string.Empty, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-1">
                            <label class="bolder">Đến ngày</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("HandoverToDate", string.Empty, new { @style = "width: 90%;" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="bolder">Trạng thái gọi</label>
                        </div>
                        <div class="col-sm-3">
                            @Html.DropDownList("ddlStatusMap", lstStatusMaps, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-2">
                            <label class="bolder">Ngày gọi gần nhất</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("CallFromDate", string.Empty, new { @style = "width: 100%;" })
                        </div>
                        <div class="col-sm-1">
                            <label class="bolder">Đến ngày</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBox("CallToDate", string.Empty, new { @style = "width: 90%;" })
                        </div>
                    </div>
                    <div class="space-6"></div>
                </div>
            }

            <div class="space-6"></div>
            <button id="btnGoFilter" class="btn-primary" style="float: right; width: 100px;">Lọc Contact</button>
            <div class="clearfix"></div>

            <div class="space-6"></div>
            <table id="grid-table"></table>
            <div id="grid-pager"></div>

            <!-- PAGE CONTENT ENDS -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>

<script type="text/javascript">
    var grid_selector = "#grid-table";
    var employeeTypeId = '@((int)EmployeeType.Collaborator)';
    var url = 'admin/api/contact/FilterSearchAdvance?statusMapId={0}&statusCareId={1}&levelIds={2}&handoverFromDate={3}&handoverToDate={4}&callFromDate={5}&callToDate={6}&qualityId={7}&productSellId={8}&employeeTypeId=' + employeeTypeId;
    var heades = ['Id', 'Họ và tên', 'Level', 'Email', 'Ngày', 'Sáng/Chiều', 'Giờ', 'Nội dung cuộc gọi gần nhất', 'Trạng thái chăm sóc', 'Định bán', 'Tổng số cuộc gọi', 'Chức năng'];
    var model = [
        { name: 'Id', index: 'Id', editable: false, sorttype: 'string', editoptions: { disabled: true }, width: '0px' },
        { name: 'Fullname', index: 'Fullname', editable: false, width: '90px', sorttype: 'string' },
        { name: 'LevelId', index: 'LevelId', editable: false, width: '40px', sorttype: 'string', align: 'center', formatter: levelFomatter },
        { name: 'Email', index: 'Email', editable: false, width: '70px', sorttype: 'string', align: 'center' },
        { name: 'AppointmentCollaboratorDate', index: 'AppointmentCollaboratorDate', editable: false, width: '60px', align: 'center', formatter: 'date', formatoptions: { srcformat: 'Y-m-dTH:i:s', newformat: 'd/m/Y' } },
        { name: 'AppointmentCollaboratorAmPm', index: 'AppointmentCollaboratorDate', editable: false, width: '70px', align: 'center', formatter: stringFormatter },
        { name: 'AppointmentCollaboratorTime', index: 'AppointmentCollaboratorDate', editable: false, width: '40px', align: 'center', formatter: 'date', formatoptions: { srcformat: 'Y-m-dTH:i:s', newformat: 'H:i' } },
        { name: 'CallInfoCollaborator', index: 'CallInfoCollaborator', editable: false, width: '200px', sorttype: 'string', align: 'left' },
        { name: 'StatusCareCollaboratorId', index: 'StatusCareCollaboratorId', editable: false, width: '120px', formatter: statusCareFomatter },
        { name: 'ProductSellId', index: 'ProductSellId', editable: false, width: '120px', formatter: productFomatter },
        { name: 'CallAmount', index: 'CallAmount', editable: false, width: '60px', align: 'center' },
        {
            name: 'Function', index: 'Function', editable: false, width: '55px', align: 'center', formatter: "dynamicLink",
            formatoptions: {
                cellValue: function (cellValue, rowId, rowData, options) {
                    var groupType = '@ViewBag.GroupType';
                    if (groupType == '@((int)GroupCollaboratorType.ManagerCollaborator)') {
                        return '<div style="color:#34810c;margin:5px; float:left;"><a style="cursor: pointer;" onclick="return openDialogCollaborator(' + rowData.Id + ')"><img style="width:16px; height:16px;" src="../../../../Images/edit-16.png"/></a></div>' +
                            //'<div style="color:#34810c;margin:5px; float:left;"><a href="" onclick="return deleteClick(' + rowData.Id + ');">   <img style="width:16px; height:16px;" src="../../../../Images/delete-16.png"/></a></div>' +
                            '<div style="clear: both;"></div>';
                    } else {
                        return '<div style="color:#34810c;margin:5px;"><a style="cursor: pointer;" onclick="return openDialogCollaborator(' + rowData.Id + ')"><img style="width:16px; height:16px;" src="../../../../Images/edit-16.png"/></a></div>';
                    }
                }
            }
        }
    ];

    function deleteClick(id) {
        var r = confirm("Có phải bạn muốn xóa contact này?");
        if (r == true) {
            var newUrl = "/admin/api/contact/delete/{0}".format(id);
            $.ajax({
                type: 'GET',
                url: newUrl,
                success: function (data) {
                    jQuery(grid_selector).jqGrid().trigger("reloadGrid");
                },
                error: function (request, status, ex) {
                    $("#alert").addClass("alert alert-block alert-error");
                    $("#alert").html("Xóa contact không thành công.");
                }
            });
        }
        return false;
    }
    $(document).ready(function () {
        bindGlobalProducts();
        loadStatusMap(employeeTypeId);

        $('#CallToDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $('#CallFromDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $('#HandoverToDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
        $('#HandoverFromDate').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });

        var newUrl = url.format(0, 0, '', '', '', '', '', 0, 0);
        setupGridWithoutEdit("#grid-table", "#grid-pager", newUrl, "admin/api/contact/edit", "Id", "Danh sách Contact", heades, model);
        $(grid_selector).jqGrid("setGroupHeaders", {
            useColSpanStyle: true,
            groupHeaders: [
                { startColumnName: "Fullname", numberOfColumns: 3, titleText: '<table style="width:100%;border-spacing:0px;"><tr><td style="text-align:center;height:40px;"><b>Thông tin Contact</b></td></tr></table>' },
                { startColumnName: "AppointmentCollaboratorDate", numberOfColumns: 3, titleText: '<table style="width:100%;border-spacing:0px;"><tr><td style="text-align:center;"><b>Thông tin lịch hẹn gọi lại</b></td></tr></table>' },
                { startColumnName: "CallInfoCollaborator", numberOfColumns: 2, titleText: '<table style="width:100%;border-spacing:0px;"><tr><td style="text-align:center;"><b>Tình trạng chăm sóc</b></td></tr></table>' }
            ]
        });
    });

    $("#btnGoFilter").click(function (e) {
        e.preventDefault();

        // Param
        var qualityId = $('#ddlQuality').val();
        var statusMapId = $('#ddlStatusMap').val();
        var statusCareId = $('#ddlStatusCare').val();
        var productSellId = $('#ddlProductSellId').val();
        var callToDate = $('#CallToDate').val().replaceAll('/', '');
        var callFromDate = $('#CallFromDate').val().replaceAll('/', '');
        var handoverToDate = $('#HandoverToDate').val().replaceAll('/', '');
        var handoverFromDate = $('#HandoverFromDate').val().replaceAll('/', '');
        var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();

        // Format Url
        var newUrl = '/' + url.format(statusMapId, statusCareId, levelIds, handoverFromDate, handoverToDate, callFromDate, callToDate, qualityId, productSellId);
        jQuery(grid_selector).jqGrid().setGridParam({ url: newUrl }).trigger("reloadGrid");
    });

    // StatusCare
    $("#ddlStatusCare").change(function () {
        var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();
        loadStatusMapByLevel(levelIds, employeeTypeId);
    });

    $('#chkLevels').change(function () {
        if ($('#chkLevels').is(':checked')) {
            var elements = document.getElementsByName('chkLevels');
            for (var i = 0; i < elements.length; i++) {
                $(elements[i]).attr('checked', false);
            }
            var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();
            loadStatusMapByLevel(levelIds, employeeTypeId);
        }
    });
    
    $('input[name="chkLevels"]').change(function () {
        if ($(this).is(':checked')) {
            $('#chkLevels').attr('checked', false);
            var levelIds = $('#chkLevels').is(':checked') ? '' : buildParamLevels();
            loadStatusMapByLevel(levelIds, employeeTypeId);
        }
    });
</script>
