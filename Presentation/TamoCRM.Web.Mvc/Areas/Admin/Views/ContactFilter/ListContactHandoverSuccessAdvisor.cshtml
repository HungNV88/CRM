@using TamoCRM.Web.Framework
@using TamoCRM.Web.Framework.Users
@using TamoCRM.Domain.Groups
@using TamoCRM.Core
@using TamoCRM.Domain.UserRole

@{
    ViewBag.Title = "Danh sách contact bàn giao sang hệ thống Advisor thành công";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="breadcrumbs" id="breadcrumbs">
    <script type="text/javascript">
        try {
            ace.settings.check('breadcrumbs', 'fixed');
        }
        catch (e) {

        }
    </script>

    <ul class="breadcrumb">
        <li>
            <i class="icon-home home-icon"></i>
            <a href="#">Trang chủ</a>
        </li>

        <li>
            <a href="javascript:void(0);">Danh mục</a>
        </li>
        <li class="active">Contact</li>
    </ul>
</div>

<div class="page-content">
    <div class="page-header">
        <h1>@ViewBag.Title</h1>
    </div>
    <!-- /.page-header -->

    <div class="row">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            @using (Ajax.BeginForm("ListContactHandoverSuccessAdvisor", "ContactFilter", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "filter_contact_handover_success_advisor" }))
            {
                
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-sm-12" id="alert">
                    </div>
                </div>
                
                <div style="border: 1px solid #c5d0dc; padding: 15px 20px 0 20px;">
                    <div class="form-group">
                        <div class="col-sm-1">
                            Họ và Tên
                        </div>
                        <div class="col-sm-3">
                            <input id="txtName" type="text" style="width: 90%;" />
                        </div>
                        <div class="col-sm-1" style="width: 9%;">
                            Điện thoại
                        </div>
                        <div class="col-sm-3" style="width: 24%;">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <i class="icon-phone"></i>
                                </span>
                                <input id="txtMobile" type="text" />
                            </div>
                        </div>
                        <div class="col-sm-1">
                            Email
                        </div>
                        <div class="col-sm-3">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <i class="icon-envelope"></i>
                                </span>
                                <input id="txtEmail" type="text" />
                            </div>
                        </div>
                    </div>  
                </div>
            }

            <div class="space-6"></div>
            <button id="btnGoFilter" class="btn-primary" style="float: right; margin-left: 10px;">Tìm kiếm</button>
            <button id="btnClearFilter" class="btn-primary" style="float: right;">Xóa trang</button>
            <div class="clearfix"></div>

            <div class="space-6"></div>
            <table id="grid-table"></table>
            <div id="grid-pager"></div>

            <!-- PAGE CONTENT ENDS -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>

<script type="text/javascript">
    var grid_selector = "#grid-table";

    var url = 'admin/api/contact/GetAllHandoverSuccessContactAdvisor?name={0}&phone={1}&email={2}';
    var heades = ['Id', 'Sản phẩm', 'Họ và tên', 'Điện thoại', 'Email', 'Số tiền học viên nộp', 'Loại tài khoản', 'Số tiền niêm yết', 'Tổng số tiền đã nộp', 'Thời gian học (đơn vị ngày)', 'Nguồn contact', 'Trạng thái', 'Chức năng'];
    var model = [
        { name: 'Id', index: 'Id', editable: false, sorttype: 'string', editoptions: { disabled: true }, width: '0px' },
        { name: 'ProductSaleId', index: 'ProductSaleId', editable: false, width: '20px', formatter: productFomatter },
        { name: 'Fullname', index: 'Fullname', editable: false, width: '30px', sorttype: 'string' },
        { name: 'Mobile1', index: 'Mobile1', editable: false, width: '30px', sorttype: 'string', align: 'center' },
        { name: 'Email', index: 'Email', editable: false, width: '30px', sorttype: 'string', align: 'center' },
        { name: 'PackagePriceSale', index: 'PackagePriceSale', editable: false, width: '20px', sorttype: 'string', align: 'center' },
        { name: 'Package', index: 'Package', editable: false, width: '20px', sorttype: 'string', align: 'center' },
        { name: 'PricePackageListedId', index: 'PricePackageListedId', editable: false, width: '20px', sorttype: 'string', align: 'center' },
        { name: 'FeeEdu', index: 'FeeEdu', editable: false, width: '20px', sorttype: 'string', align: 'center' },
        { name: 'LearnNumberDay', index: 'LearnNumberDay', editable: false, width: '20px', sorttype: 'string', align: 'center' },
        { name: 'SourceType', index: 'SourceType', editable: false, width: '20px', sorttype: 'string', align: 'center' },
        { name: 'sHandoverStatusAdvisor', index: 'sHandoverStatusAdvisor', editable: false, width: '30px', sorttype: 'string', align: 'center' },
        {
            name: 'Function', index: 'Function', editable: false, width: '10px', align: 'center', formatter: "dynamicLink",
            formatoptions: {
                cellValue: function (cellValue, rowId, rowData, options) {
                    var groupType = '@ViewBag.GroupType';
                    if (groupType == '@((int)GroupConsultantType.ManagerConsultant)') {
                        return '<div style="color:#34810c;margin:5px; float:left;"><a style="cursor: pointer;" onclick="return openDialog(' + rowData.Id + ')"><img style="width:16px; height:16px;" src="../../../../Images/edit-16.png"/></a></div>' +
                            '<div style="clear: both;"></div>';
                    } else {
                        return '<div style="color:#34810c;margin:5px;"><a style="cursor: pointer;" onclick="return openDialog(' + rowData.Id + ')"><img style="width:16px; height:16px;" src="../../../../Images/edit-16.png"/></a></div>';
                    }
                }
            }
        }
    ];
    $(document).ready(function () {
        var newUrl = url.format('', '', '');
        setupGridWithHeight("#grid-table", "#grid-pager", newUrl, '', "Id", "Danh sách Contact bàn giao", heades, model, 'GET', '100%');
        $(grid_selector).jqGrid("setGroupHeaders", {
            useColSpanStyle: true,
            groupHeaders: [
                { startColumnName: "Fullname", numberOfColumns: 4, titleText: '<table style="width:100%;border-spacing:0px;"><tr><td style="text-align:center;height:40px;"><b>Thông tin Contact</b></td></tr></table>' },
                { startColumnName: "AppointmentDate", numberOfColumns: 3, titleText: '<table style="width:100%;border-spacing:0px;"><tr><td style="text-align:center;"><b>Thông tin lịch hẹn gọi lại</b></td></tr></table>' },
                { startColumnName: "CallInfo", numberOfColumns: 2, titleText: '<table style="width:100%;border-spacing:0px;"><tr><td style="text-align:center;"><b>Tình trạng chăm sóc</b></td></tr></table>' }
            ]
        });

        $(window).keydown(function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                $("#btnGoFilter").click();
            }
        });

        $("#btnGoFilter").click(function (e) {
            e.preventDefault();

            // Param
            var name = $('#txtName').val();
            var email = $('#txtEmail').val();
            var mobile = $('#txtMobile').val();
            

            // Format Url
            alertHide();
            var newUrl = '/' + url.format(name, mobile, email);
            $.ajax({
                type: 'GET',
                url: '/admin/api/contact/GetAllHandoverSuccessContactAdvisor',
                data: {
                    name: name,
                    mobile: mobile,
                    email: email,                   
                },
                beforeSend: function () {

                },
                success: function (response) {
                    
                },
                error: function (request, status, ex) {
                    
                }
            });
            jQuery(grid_selector).jqGrid().setGridParam({ url: newUrl }).trigger("reloadGrid");
        });
    });
</script>


