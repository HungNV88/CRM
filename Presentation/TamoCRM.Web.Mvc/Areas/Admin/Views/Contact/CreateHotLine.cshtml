@using TamoCRM.Core
@using TamoCRM.Domain.Catalogs
@using TamoCRM.Domain.Groups
@using TamoCRM.Domain.UserRole
@using TamoCRM.Domain.Channels
@using TamoCRM.Web.Framework
@using TamoCRM.Web.Framework.Users
@model TamoCRM.Web.Mvc.Areas.Admin.Models.Contacts.ContactAddModel
@{
    ViewBag.Title = "Tạo Contact Hotline";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@{
    var lstGenders = Util.SelectedList<GenderType>();

    //Groups
    var Users = ViewBag.Users;
    ((List<UserInfo>)Users).RemoveAll(c => c.UserID == 0);
    var lstUsers = new SelectList(Users, "UserId", "UserName");

    //Channel
    var Channel = ViewBag.Channels;
    ((List<ChannelInfo>)Channel).RemoveAll(c => c.ChannelId == 0);
    ((List<ChannelInfo>)Channel).Insert(0, new ChannelInfo { ChannelId = 0, Name = "Tất cả" });
    var lstChannel = new SelectList(Channel, "ChannelId", "Name");

    var sourceTypes = StoreData.ListSourceType.Where(c => c.IsShowHotLine).ToList();
    var lstSourceTypes = new SelectList(sourceTypes, "SourceTypeId", "Name");

    //Product List
    var product = ViewBag.Products;
    ((List<ProductInfo>)product).RemoveAll(c => c.Id == 0);
    ((List<ProductInfo>)product).Insert(0, new ProductInfo { Id = 0, Name = "Tất cả" });
    var lstProducts = new SelectList(product, "Id", "Name");

    // Group
    var groups = ViewBag.Groups;
    ((List<GroupInfo>)groups).RemoveAll(c => c.GroupId == 0);
    ((List<GroupInfo>)groups).Insert(0, new GroupInfo { GroupId = 0, Name = "Tất cả", EmployeeTypeId = (int)EmployeeType.Consultant });
    var lstGroups = new SelectList(((List<GroupInfo>)groups).Where(c => c.EmployeeTypeId == (int)EmployeeType.Consultant), "GroupId", "Name");
}
<div class="breadcrumbs" id="breadcrumbs">
    <script type="text/javascript">
        try {
            ace.settings.check('breadcrumbs', 'fixed');
        } catch (e) {
        }
    </script>

    <ul class="breadcrumb">
        <li>
            <i class="icon-home home-icon"></i>
            <a href="#">Trang chủ</a>
        </li>

        <li>
            <a href="javascript:void(0);">Danh mục</a>
        </li>
        <li class="active">Contact</li>
    </ul>
</div>
<div class="page-content">
    <div class="page-header">
        <h1>Thêm mới contact hotline								
        </h1>
    </div>
    <!-- /.page-header -->

    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("CreateHotline", "Contact", FormMethod.Post, new { @id = "CreateContact" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-sm-12" id="alert">
                    </div>
                </div>
                <div style="border: 1px solid #c5d0dc; padding: 25px;">
                    <div class="row">
                        <div class="col-xs-2">
                            Họ và tên*
                        </div>
                        <div class="col-xs-4">
                            <div class="clearfix">
                                @Html.TextBoxFor(x => x.ContactInfo.Fullname, new { @style = "width: 90%", @required = "required", error = "Họ và tên rỗng" })
                            </div>
                        </div>
                        <div class="col-xs-2">
                            Nguồn*
                        </div>
                        <div class="col-xs-4">
                            <div class="clearfix">
                                @Html.DropDownListFor(x => x.ContactInfo.TypeId, lstSourceTypes, new { style = "width: 100%" })
                            </div>
                        </div>
                    </div>                  
                    <div class="space-4"></div>
                    <div class="row">
                        <div class="col-xs-2">
                            Kênh*
                        </div>
                        <div class="col-xs-4">
                            <div class="clearfix">
                                @*@Html.TextBoxFor(x => x.ContactInfo.Channel, new { @style = "width: 90%", @required = "required", error = "Kênh rỗng" })*@
                                @Html.DropDownListFor(x => x.ChannelId, lstChannel, new { @class = "form-control", style = "width: 300px" })
                            </div>
                        </div>
                        <div class="col-xs-4">
                           
                        </div>
                    </div>

                    <div class="space-4"></div>
                    <div class="row">
                        <div class="col-xs-2">
                            Số điện thoại 1*
                        </div>
                        <div class="col-xs-4">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <i class="icon-phone"></i>
                                </span>@Html.TextBoxFor(x => x.ContactInfo.Mobile1, new { @style = "width: 88.5%"})
                            </div>
                        </div>
                        <div class="col-xs-2">
                            Số điện thoại 2
                        </div>
                        <div class="col-xs-4">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <i class="icon-phone"></i>
                                </span>@Html.TextBoxFor(x => x.ContactInfo.Mobile2, new { @style = "width: 100%" })
                            </div>
                        </div>
                    </div>
                    <div class="space-4"></div>
                   
                    <div class="row">
                        <div class="col-xs-2">
                            Ghi chú
                        </div>
                        <div class="col-xs-10">
                            @Html.TextAreaFor(x => x.ContactInfo.Notes, new { @class = "autosize-transition form-control" })
                        </div>
                    </div>
                    <div class="space-4"></div>
                 
                    <hr />
                    <div class="row">
                        <div class="col-xs-2">
                            Nhóm TVTS
                        </div>
                        <div class="col-xs-4">
                            @Html.DropDownList("GroupId", lstGroups, new { @class = "form-control", @style = "width: 90%" })
                        </div>
                        <div class="col-xs-2">
                            TVTS
                        </div>
                        <div class="col-xs-4">@Html.DropDownListFor(x => x.ContactInfo.UserConsultantId, lstUsers, new { @class = "form-control", @style = "width: 100%" })
                        </div>
                    </div>
                </div>
                <div class="space-6"></div>
                <button id="btnSubmit" class="btn-primary" style="float: right; width: 150px;" type="submit" onclick="return submitForm();">Thêm mới Contact</button>
                <div class="clearfix"></div>
                <script>
                    $('#Birthday').datepicker({ format: 'dd/mm/yyyy', autoclose: true, dateonly: true, endDate: "+0d" });
                </script>
            }
        </div>
    </div>
</div>
<script src="/Content/themes/ace/assets/js/jquery.form.js"></script>
<script src="/Content/themes/ace/assets/js/jquery.validate.min.js"></script>
<script src="/Content/themes/ace/assets/js/jquery.maskedinput.min.js"></script>
<script src="/Content/themes/ace/assets/js/additional-methods.min.js"></script>


<script type="text/javascript">
    var branchId = '@UserContext.GetDefaultBranch()';
    var employeeTypeId = '@((int)EmployeeType.Consultant)';

    $(document).ready(function () {
        customValidate();
        $('select').chosen();
        $('#ContactInfo_UserConsultantId').chosen();

        var groupId = $("#GroupId").val();
        loadUser(branchId, groupId, employeeTypeId, "ContactInfo_UserConsultantId");
    });

    function submitForm() {
        if (!checkDuplicate()) return false;
        return true;
    }

    $("#GroupId").change(function () {
        var groupId = $("#GroupId").val();
        loadUser(branchId, groupId, employeeTypeId, "ContactInfo_UserConsultantId");
    });

    var message = '@ViewBag.Message';
    if (message == null || message == '') {
        $('#btnSubmit').removeAttr('disabled');
        alertHide();
    }
    else {
        $("#alert").addClass("alert alert-block alert-success");
        $("#alert").html($("#alert").html(message).text());
        $('#btnSubmit').removeAttr('disabled');
        if (message.indexOf('vui lòng thử lại') < 0) resetForm();
    }
    
    function resetForm() {
        $('#ContactInfo_ProductSellId').val(0);
        $('#ContactInfo_Fullname').val('');
        $('#ContactInfo_Birthday').val('');
        $('#ContactInfo_Address').val('');
        $('#ContactInfo_Mobile1').val('');
        $('#ContactInfo_Mobile2').val('');
        $('#ContactInfo_Email2').val('');
        $('#ContactInfo_Email').val('');
        $('#ContactInfo_Notes').val('');
    }
</script>
